@import url('https://fonts.googleapis.com/css2?family=Sora&display=swap');

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    background: #F012BE;
    height: 100%;
    width: 100%;
    align-items: center;
    display: flex;
    flex-direction: column;
    font-family: 'Sora', sans-serif;
}

/* set colour for dark mode if selected  */
body.darkmode {
    background: #001f3f;
}

/* main heading  */
h1 {
    padding-top: 1vw;
    color: white;
    text-decoration: none;
    /* vary text size to match size of page*/
    font-size: 7vmin;
    text-transform: uppercase;
    letter-spacing: 4px;
}

/* game information  */
.info {
    color: white;
    text-align: center;
    font-size: clamp(2rem, 1vw + 0.5rem, 2rem);
    text-align: center;
}

/* grid for layout of game board */
.game {
    width: 100%;
    height: 100%;
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
    grid-template-rows: 1fr 1fr 1fr 1fr 1fr 1fr;
    gap: 10px;
    background: #0074D9;
    justify-content: space-evenly;
    justify-items: center;
    align-content: space-evenly;
    align-items: center;
}

/* slot on board for tokens  */
.slot {
    background: #f2fbff;
    border-radius: 50%;
    width: 100%;
    padding-top: 100%;
    justify-content: center;
    transition: 0.5s;
}

/* game token properties for assigning colour of slots */
.green {
    background: #2ECC40;
}

.yellow {
    background: #FFDC00;
}

/* highlight empty slots on game board */
.slot.clear:hover {
    opacity: 0.7;
}

/* overall container for 3D content  */
.scene {
    width: 70vmin;
    height: 70vmin;
    margin-top: 1vmin;
    margin-bottom: 6vh;
    perspective: 900px;
}

/* define the 3D properties of cube and the faces */
.box {
    position: relative;
    transform-style: preserve-3d;
    transform: translateZ(-35vmin);
    transition: transform .7s;
}

/* set text properties on box face  */
.boxface {
    position: absolute;
    width: 70vmin;
    height: 70vmin;
    font-weight: bold;
    color: white;
    text-align: center;
    padding: 1.3em;
}

/* set colour and position of all faces of 3D cube */
.boxfacefront {
    background: #0074D9;
    transform: rotateY(0deg) translateZ(35vmin);
}

.boxfaceright {
    background: #FF851B;
    transform: rotateY(90deg) translateZ(35vmin);
}

.boxfaceback {
    background: #008080;
    transform: rotateY(180deg) translateZ(35vmin);
}

.boxfaceleft {
    background: #FF851B;
    transform: rotateY(-90deg) translateZ(35vmin);
}

.boxfacetop {
    background: green;
    transform: rotateX(90deg) translateZ(35vmin);
}

.boxfacebottom {
    background: green;
    transform: rotateX(-90deg) translateZ(35vmin);
}

.boxfaceshadow {
    background: rgb(15, 15, 15);
    transform: rotateX(-90deg) translateZ(40vmin);
    filter: blur(25px);
}

/* classes that control which side of cube faces forward, these are attached and detached as desired */
.spinfront {
    transform: translateZ(-35vmin) rotateY(0deg);
}

.spinback {
    transform: translateZ(-35vmin) rotateY(-180deg);
}

.spinright {
    transform: translateZ(-35vmin) rotateY(-90deg);
}

.spinleft {
    transform: translateZ(-35vmin) rotateY(90deg);
}

/* styling to scale text on game menu smoothly  */
.gamemenu {
    font-size: 5vmin;
}

.menuoption {
    padding: 5vmin 0;
}

/* increase size of checkboxes to make them easier to click */
input.largecheck {
    width: 2.5vmax;
    height: 2.5vmax;
}

/* same button styling used on page and in game  */
.button {
    font-size: 3vh;
    background-color: #F012BE;
    margin: 0 10px;
    font-weight: bold;
    padding: 1vmin;
    color: #fff;
    border: 5px solid #fff;
    outline: none;
    text-decoration: none;
    text-align: center;
    transition: 0.5s;
}

.button:hover,
.button:active {
    background-color: white;
    color: #F012BE;
    transition: 0.5s;
}

/* responsive scaling for player status text  */
#playerStatus {
    color: white;
    margin: 1vh;
    font-size: clamp(1.5rem, 1vw + 0.5rem, 2rem);
}